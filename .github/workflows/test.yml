name: "Test"
on: [push, pull_request]
jobs:
    lint:
        runs-on: ubuntu-latest
        env:
            TEST: "lint"
        steps:
            - uses: actions/setup-node@v1
              with:
                  node-version: 14

            - uses: actions/checkout@v2

            - run: npm ci

            - run: bash ./scripts/ci.sh
    unit:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node: [11, 12, 13, 14]
        env:
            TEST: "unit"
        steps:
            - uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node }}

            - uses: actions/checkout@v2

            - run: npm ci

            - run: bash ./scripts/ci.sh
    build-web3:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
              with:
                  repository: 'starfishlabs/oasis-evm-web3-gateway'
                  ref: 'main'

            - uses: actions/setup-go@v2
              with:
                  go-version: '^1.17'

            - run: go build

            - uses: actions/upload-artifact@v2
              with:
                  name: oasis-evm-web3-gateway
                  path: oasis-evm-web3-gateway
    unit-oasis:
        runs-on: ubuntu-latest
        needs:
            - build-web3
        strategy:
            fail-fast: false
            matrix:
                testCmd:
                    [
                        'e2e_oasis'
                    ]
        services:
            postgres:
                image: postgres
                env:
                    POSTGRES_DB: postgres
                    POSTGRES_USER: postgres
                    POSTGRES_PASSWORD: postgres
        env:
            OASIS_CORE_VERSION: 21.3.1
            OASIS_NODE: ${{ github.workspace }}/scripts/oasis-node
            OASIS_NET_RUNNER: ${{ github.workspace }}/scripts/oasis-net-runner
            OASIS_EMERALD_PARATIME: ${{ github.workspace }}/scripts/emerald-paratime
            OASIS_EVM_WEB3_GATEWAY: ${{ github.workspace }}/scripts/oasis-evm-web3-gateway
            TEST: ${{ matrix.testCmd }}
        steps:
            - uses: actions/setup-node@v1
              with:
                  node-version: 14
            - uses: actions/checkout@v2

            - run: npm ci

            - run: wget "https://github.com/oasisprotocol/oasis-core/releases/download/v${OASIS_CORE_VERSION}/oasis_core_${OASIS_CORE_VERSION}_linux_amd64.tar.gz"
            - run: tar xfvz oasis_core_${OASIS_CORE_VERSION}_linux_amd64.tar.gz
            - run: mv oasis_core_${OASIS_CORE_VERSION}_linux_amd64/oasis-node ${OASIS_NODE}
            - run: mv oasis_core_${OASIS_CORE_VERSION}_linux_amd64/oasis-net-runner ${OASIS_NET_RUNNER}

            - run: wget "https://github.com/oasisprotocol/emerald-paratime/releases/download/v0.1.0-alpha1/emerald-paratime" -O ${OASIS_EMERALD_PARATIME}

            - uses: actions/download-artifact@v2
              with:
                name: oasis-evm-web3-gateway
                path: scripts
            - run: chmod a+x ${OASIS_EVM_WEB3_GATEWAY}

            - run: bash ./scripts/ci.sh

    e2e:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                testCmd:
                    [
                        'unit_and_e2e_clients',
# Disabled until https://github.com/oasisprotocol/web3-tests/issues/2 is fixed.
#                        'e2e_browsers',
#                        'e2e_ganache',
#                        'e2e_mosaic',
                        'e2e_gnosis_dex',
                    ]
        env:
            TEST: ${{ matrix.testCmd }}
            INFURA_HTTP: ${{ secrets.INFURA_HTTP }}
        steps:
            - uses: actions/setup-node@v1
              with:
                  node-version: 14
            - uses: actions/checkout@v2

            - run: npm ci

            - run: bash ./scripts/ci.sh

